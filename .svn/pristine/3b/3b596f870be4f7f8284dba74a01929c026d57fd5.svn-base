package com.edureka.leadProcess;

import org.testng.annotations.Test;

import com.edureka.pages.AllCoursesPage;
import com.edureka.pages.DashboardPage;
import com.edureka.pages.OrderSummaryPage;
import com.edureka.pages.SignInModalPage;
import com.edureka.util.DriverTestCase;

public class SingupFromEnrollInListView extends DriverTestCase {

    private DashboardPage dashboardPage;
    private SignInModalPage signInModalPage;
    private AllCoursesPage allCoursesPage;
    private OrderSummaryPage orderSummaryPage;

    static String email;
    static String password;
    static String userName;
    static String coursename;
    static String course__Id ;
    static String webSiteAction;
    static String course_Group;
    static String isPaidValue;
    static String campaign_Values;
    static String level_id;
    static String event;
    static String country;
    static String campaignSource;
    static String campaignName;
    static String campaignMedium;
    static String event_Type;

    @Test
    public void test_008SingupFromEnrollInListView() throws Exception {

        try {
            // Navigate to app url
            addLog("Navigate to the Edureka application url");
            dashboardPage = applicationSetupForLead();

            // Verify Edureka Dashboard Page
            addLog("Verify Edureka Dashboard Page");
            dashboardPage=  dashboardPage.verifyDashboard();

            // Click on Course Tab
            addLog("Click on Course Tab");
            allCoursesPage= dashboardPage.clickOnCoursesTab();

            // Verify All Courses page
            addLog("Verify All Courses page");
            allCoursesPage= allCoursesPage.verifyAllCoursesPage();

            // Click on List view Icon
            addLog("Click on List view Icon");
            allCoursesPage=allCoursesPage.clickOnListViewIcon();

            // Select Course From Trending Courses
            coursename = propertyReader.readTestData("Course_DataAnalytics_Certification");
            addLog("Select Course From Trending Courses");
            signInModalPage= allCoursesPage.clickOnEnrollButtonFromListCourses(SignInModalPage.class,coursename);

            // Sign up user
            String domainName= propertyReader.readApplicationFile("EdurekaDomain");
            addLog("Sign up user");
            orderSummaryPage= signInModalPage.signUp(OrderSummaryPage.class, domainName);

            // Verify User Home Page
            addLog("Verify sign up successfully");
            orderSummaryPage=orderSummaryPage.verifySignUpSuccessfully();
            
            // Database verification in User Table
            addLog("Database verification in User Table");
            orderSummaryPage=orderSummaryPage.dataVerificationInUserTable();

            // Verify Data in User Lead Table
            course__Id = propertyReader.readTestData("Course_DataAnalytics_Id");
            webSiteAction = propertyReader.readTestData("WebSiteAction_AllCoursesPageForEnroll");
            country= propertyReader.readTestData("CountryIndia");
            campaignSource= propertyReader.readTestData("LeadCampaignSource");
            campaignName= propertyReader.readTestData("LeadCampaignName");
            campaignMedium= propertyReader.readTestData("LeadCampaignMedium");
            addLog("Verify Data in User Lead Table");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_LeadsTable(course__Id,webSiteAction,country,campaignSource, campaignName, campaignMedium);

            // Verify Data in User Course table
            course_Group = propertyReader.readTestData("Course_DataAnalytics_Group");
            isPaidValue= propertyReader.readTestData("HomePage_Signup_Is_Paid_Value");
            addLog("Verify Data in User Course table");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_CoursedTable(course__Id,isPaidValue,course_Group);

            // Verify Data in User Event Table
            campaign_Values= propertyReader.readTestData("LeadCampaignName");
            event = propertyReader.readTestData("Event_Enroll");
            event_Type=propertyReader.readTestData("Enorll_Event_Type");
            addLog("Verify Data in User Event Table");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_EventTable(course__Id,webSiteAction,campaign_Values, event_Type);

            // Veriy Data in Ambassadors table
            level_id = propertyReader.readTestData("HomePage_Signup_level_id");
            addLog("Veriy Data in Ambassadors table");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_AmbassadorsTable(level_id);

         // Verify Data in Completed Queue Jobs table
            String courseStatus = this.propertyReader.readTestData("Status");
            String courseProperty = this.propertyReader.readTestData("Priority");
            this.allCoursesPage = this.allCoursesPage.dataVerificationInCompleted_Queue_Jobs_Table(courseStatus, courseProperty, event_Type);

            
            // Click on Profile Dropdown
            userName = propertyReader.readRunTimeData("UserName");
            addLog("Click on Profile Dropdown");
            orderSummaryPage=orderSummaryPage.clickOnProfileDropdown(userName);  

            // Logout from the application
            addLog("Logout from the application.");
            dashboardPage = orderSummaryPage.logout();  
        }
        catch (final Error e) {
            captureScreenshot("test_008SingupFromEnrollInListView");
            throw e;
        } catch (final Exception e) {
            captureScreenshot("test_008SingupFromEnrollInListView");
            throw e;
        }
    }
    @Test(dependsOnMethods={"test_008SingupFromEnrollInListView"})
    public void test_017SignInFromEnrollInListView() throws Exception {

        try {
            // Verify Edureka Dashboard Page
            addLog("Verify Edureka Dashboard Page");
            dashboardPage=  dashboardPage.verifyDashboard();

            // Click on Course Tab
            addLog("Click on Course Tab");
            allCoursesPage= dashboardPage.clickOnCoursesTab();

            // Click on List view Icon
            addLog("Click on List view Icon");
            allCoursesPage=allCoursesPage.clickOnListViewIcon();

            // Click on  Enroll button
            addLog("Click on  Enroll button");
            
            coursename = propertyReader.readTestData("Course_AndroidApp_Development");
            signInModalPage= allCoursesPage.clickOnEnrollButtonFromListCourses(SignInModalPage.class,coursename);

            // Verify Sign In modal
            addLog("Verify Sign In modal");
            signInModalPage=signInModalPage.verifySignInModal();

            // Verify default SignUp is selected
            addLog("Verify default SignUp is selected");
            signInModalPage= signInModalPage.clickOnLoginTab();

            // Sign in user
            email = propertyReader.readRunTimeData("Email_Id");
            password = propertyReader.readTestData("Password");
            addLog("Sign in user");
            signInModalPage= signInModalPage.enterEmailAndPassword(email, password);

            // Click on Start Learning Course button
            addLog("Click on Start Learning Course button");
            orderSummaryPage=signInModalPage.clickStartLearningButton(OrderSummaryPage.class);

            // Verify User Home Page
            addLog("Verify User Home Page");
            orderSummaryPage=orderSummaryPage.verifySignUpSuccessfully();
            
            // Database verification in User Table
            addLog("Database verification in User Table");
            orderSummaryPage=orderSummaryPage.dataVerificationInUserTable();

            // Verify Data in User Lead Table
            addLog("Verify Data in User Lead Table");
            course__Id = propertyReader.readTestData("Course_AndroidApp_Development_Id");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_LeadsTable(course__Id,webSiteAction,country,campaignSource, campaignName, campaignMedium);

            // Verify Data in User Course table
            addLog("Verify Data in User Course table");
            course_Group = propertyReader.readTestData("Course_AndroidApp_Development_Group");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_CoursedTable(course__Id,isPaidValue,course_Group);

            // Verify Data in User Event Table
            campaign_Values = propertyReader.readTestData("UTM_campaign");
            addLog("Verify Data in User Event Table");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_EventTable(course__Id,webSiteAction,campaign_Values, event_Type);

            // Veriy Data in Ambassadors table
            addLog("Veriy Data in Ambassadors table");
            orderSummaryPage= orderSummaryPage.dataVerificationInUser_AmbassadorsTable(level_id);

         // Verify Data in Completed Queue Jobs table
            String courseStatus = this.propertyReader.readTestData("Status");
            String courseProperty = this.propertyReader.readTestData("Priority");
            this.allCoursesPage = this.allCoursesPage.dataVerificationInCompleted_Queue_Jobs_Table(courseStatus, courseProperty, event_Type);

            // Click on Profile Dropdown
            addLog("Click on Profile Dropdown");
            orderSummaryPage=orderSummaryPage.clickOnProfileDropdown(userName);  

            // Logout from the application
            addLog("Logout from the application.");
            dashboardPage = orderSummaryPage.logout();  

        }

        catch (final Error e) {
            captureScreenshot("test_017SignInFromEnrollInListView");
            throw e;
        } 
        catch (final Exception e) {
            captureScreenshot("test_017SignInFromEnrollInListView");
            throw e;
        }
    }
}


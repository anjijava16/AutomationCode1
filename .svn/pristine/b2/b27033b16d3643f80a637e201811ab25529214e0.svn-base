package com.edureka.paymentProcess;

import org.testng.annotations.Test;

import com.edureka.pages.DashboardPage;
import com.edureka.pages.MyProfilePage;
import com.edureka.pages.OrderSummaryPage;
import com.edureka.pages.PayPalPage;
import com.edureka.pages.SelectedCoursePage;
import com.edureka.pages.SignInModalPage;
import com.edureka.pages.UserHomePage;
import com.edureka.util.DriverTestCase;

public class MakePaymentThroughPaypal extends DriverTestCase{
    private DashboardPage dashboardPage;
    private UserHomePage userHomePage;
    private SelectedCoursePage selectedCoursePage;
    private OrderSummaryPage orderSummaryPage;
    private SignInModalPage signInModalPage;
    private PayPalPage payPalPage;
    private MyProfilePage myProfilePage;

    @Test
    public void test_004MakePaymentThroughPaypal() throws Exception {

        try {

            // Navigate to app url
            addLog("Navigate to the Edureka application url");
            dashboardPage = applicationSetup();

            // Verify Edureka Dashboard Page
            addLog("Verify Edureka Dashboard Page");
            dashboardPage=  dashboardPage.verifyDashboard();

            // Click on Signin Navigation Header
            addLog("Click on SignIn Navigation header");
            signInModalPage = dashboardPage.clickSignInHeader();

            // Verify LogIn Is Default
            addLog("Verify LogIn Is Default");
            signInModalPage = signInModalPage.verifyLoginIsDefault();

            // click on Sign up link
            addLog("click on Sign up link");
            signInModalPage=signInModalPage.clickSignUp();

            String edurekaDomain = propertyReader.readApplicationFile("EdurekaDomain");
            addLog("Sign up user");
            userHomePage= signInModalPage.signUp(UserHomePage.class, edurekaDomain);

            // Verify User Home Page
            addLog("Verify User Home Page");
            userHomePage=userHomePage.verifyUserPage();

            // Select Course
            String courseName = propertyReader.readTestData("BigData&Hadoop");
            addLog("Select Course");
            selectedCoursePage=dashboardPage.selectCourse(courseName);

            // Verify Selected course should be open.
            addLog("Verify Selected course should be open");
            selectedCoursePage=selectedCoursePage.verifySelectedPopularCoursePage(courseName);

            // Click on Enroll Button
            addLog("Click on Enroll Button");
            orderSummaryPage=selectedCoursePage.clickOnEnrollButton(OrderSummaryPage.class);

            // Verify Order Summary Page
            addLog("Verify Order Summary Page");
            orderSummaryPage=orderSummaryPage.verifyPage();

            String currency= propertyReader.readTestData("USDCurrency");
            orderSummaryPage=orderSummaryPage.changeCurrency(currency);

            // Verify total Amount for USD is equal to Net price
            addLog("Verify total Amount for USD is equal to Net price");
            orderSummaryPage=orderSummaryPage.verifyTotalAmount(currency);

            // Verify USD Currency Exclusive Of Service Tax
            addLog("Verify USD Currency Exclusive Of Service Tax");
            orderSummaryPage=orderSummaryPage.verifyUSDCurrency();

            // Click on Paypal link
            addLog("Click on Paypal link");
            payPalPage= orderSummaryPage.clickOnPaypalLink_New();

            // Verify Paypal Page
            addLog("Verify Paypal Page");
            payPalPage=payPalPage.verifyPage();

            // Enter Email, Password and Login paypal account
            addLog("Enter Email, Password and Login paypal account");
            payPalPage=payPalPage.enterEmailAndPassword();

            // Make payment by clicking on Continue button
            addLog("Make payment by clicking on Continue button");
            myProfilePage=payPalPage.clickOnContinueButton();

            // Switch to Parent Window and verify my Profile page
            addLog("Switch to Parent Window and verify my Profile page");
            myProfilePage= myProfilePage.verifyPage();

            // Verify Payment success message
            addLog("Verify payment success message 'Thank you for making payment !'");
            myProfilePage= myProfilePage.verifySuccessPaymentMessage();


            
            // Verify Data in User table
            addLog("Verify Data in User table");
            myProfilePage=myProfilePage.dataVerificationInUserTable("2");

            // Verify Data in Pre-Order table
            String course_Id= propertyReader.readTestData("Course_ID_BigData");
            String course_Title= propertyReader.readTestData("BigData_Hadoop_Title");
            addLog("Verify Data in Pre-Order table");
            myProfilePage=myProfilePage.dataVerificationInUser_PreOrderTableForUSD(course_Id,course_Title);

            // Verify Data in User Course Table
            String course_Group = propertyReader.readTestData("Course_Group_BigData");
            String isPaidValue= propertyReader.readTestData("HomePage_Signup_Is_Paid_Value");
            addLog("Verify Data in User Course Table");
            myProfilePage=myProfilePage.dataVerificationInUser_CoursedTable(course_Id, isPaidValue, course_Group);

            // Database verification in Post order table
            String paymentGateway = propertyReader.readTestData("PaymentGatewayPaypal");
            addLog("Database verification in Post order table");
            myProfilePage=myProfilePage.dataVerificationInUser_PostOrderTable(course_Id,course_Title,paymentGateway,currency);
            
            //Verify the Url  on my profile page after payment
            myProfilePage=myProfilePage.verifyCourseIdInUrl(course_Id);
            
            //Verify Goto Course and LMS Page
            addLog("Verify Go to course and LMS Page");
            myProfilePage= myProfilePage.verifyGotoCourseAndLMSPage();
            
            
            
        }
        catch (final Error e) {
            captureScreenshot("test_004MakePaymentThroughPaypal");
            throw e;
        } catch (final Exception e) {
            captureScreenshot("test_004MakePaymentThroughPaypal");
            throw e;
        }
    }

}
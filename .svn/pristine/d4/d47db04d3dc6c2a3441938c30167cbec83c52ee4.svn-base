package com.edureka.registration;

import org.testng.annotations.Test;

import com.edureka.util.DriverTestCase;
import com.edureka.pages.DashboardPage;
import com.edureka.pages.SignInModalPage;

public class VerifyUserCannotLoggedInWithIncorrectEmailAndCorrectPassword extends DriverTestCase{
    private DashboardPage dashboardPage;
    private SignInModalPage signInModalPage;

    String password;
    String email;
    static String errorMessage;

    @Test
    public void test_013UserCannotLoggedInWithIncorrectEmailAndCorrectPassword() throws Exception {

        try {

            // Navigate to app url
            addLog("Navigate to the Edureka application url");
            dashboardPage = applicationSetup();

            // Verify Edureka Dashboard Page
            addLog("Verify Edureka Dashboard Page");
            dashboardPage=  dashboardPage.verifyDashboard();

            // Click on Signin Navigation Header
            addLog("Click on SignIn Navigation header");
            signInModalPage = dashboardPage.clickSignInHeader();

            // Verify Login is selected as default
            addLog("Verify Login is selected as default");
            signInModalPage = signInModalPage.verifyLoginIsDefault();

            // Enter incorrect email and correct password
            email = "test" + randomString(3) + "Mail";
            password = propertyReader.readTestData("Password");
            addLog("Enter incorrect email and correct password");
            signInModalPage= signInModalPage.enterEmailAndPassword(email, password);

            //  Verify user is not able to Logged in if entered email is incorrect
            errorMessage = propertyReader.readTestData("ErrorMessage");
            addLog("Verify user is not able to Logged in if entered email is incorrect");
            signInModalPage=  signInModalPage.verifyErrorForLogIn(errorMessage);

        }
        catch (final Error e) {
            captureScreenshot("test_013UserCannotLoggedInWithIncorrectEmailAndCorrectPassword");
            throw e;
        } catch (final Exception e) {
            captureScreenshot("test_013UserCannotLoggedInWithIncorrectEmailAndCorrectPassword");
            throw e;
        }
    }
    @Test(dependsOnMethods={"test_013UserCannotLoggedInWithIncorrectEmailAndCorrectPassword"})
    public void test_014serCannotLoggedInWithoutPassword() throws Exception {

        try {

            // Close sign in module
            addLog("Close sign in module");
            dashboardPage=  signInModalPage.closeSignInModule();

            // Click on Signin Navigation Header
            addLog("Click on SignIn Navigation header");
            signInModalPage = dashboardPage.clickSignInHeader();

            // Verify Login is selected as default
            addLog("Verify Login is selected as default");
            signInModalPage = signInModalPage.verifyLoginIsDefault();

            // Enter incorrect email and correct password
            email = "test" + randomString(3) + "@edureka.in";
            password=null;
            addLog("Enter email");
            signInModalPage= signInModalPage.enterEmailAndPassword(email, password);

            //  Verify user is not able to Logged in if password is not entered 
            errorMessage = propertyReader.readTestData("ErrorMessage");
            addLog("Verify user is not able to Logged in if password is not entered");
            signInModalPage=  signInModalPage.verifyErrorForLogIn(errorMessage);
        }
        catch (final Error e) {
            captureScreenshot("test_014serCannotLoggedInWithoutPassword");
            throw e;
        } catch (final Exception e) {
            captureScreenshot("test_014serCannotLoggedInWithoutPassword");
            throw e;
        }
    }
}